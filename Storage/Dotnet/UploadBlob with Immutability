//DISCLAIMER

//The sample scripts are not supported under any Microsoft standard support program or service.
//The sample scripts are provided AS IS without warranty of any kind.Microsoft further disclaims all implied warranties including, without limitation, 
//any implied warranties of merchantability or of fitness for a particular purpose.The entire risk arising out of the use or performance of the sample 
//scripts and documentation remains with you. In no event shall Microsoft, its authors, or anyone else involved in the creation, production, or delivery of 
//the scripts be liable for any damages whatsoever (including without limitation, damages for loss of business profits, business interruption, loss of business 
//information, or other pecuniary loss) arising out of the use of or inability to use the sample scripts or documentation, even if Microsoft has been advised of
//the possibility of such damages.


/*
Demonstrate how to add immutability policy for a blob at the time of upload of the latter.
Ensure you have version-level immutability configured for the storage account 
*/

using Azure.Storage.Blobs;
using Azure.Storage.Blobs.Models;

string localFilePath = @"C:\Thakur\blobupload\samp.txt";

string connectionString = "<<your connection string>>";


BlobContainerClient containercClient = new BlobContainerClient(connectionString, "mymmutest");
containercClient.CreateIfNotExists();

BlobClient blob = containercClient.GetBlobClient("thakimmublob.txt");

BlobUploadOptions options = new BlobUploadOptions();
options.ImmutabilityPolicy = new BlobImmutabilityPolicy()
{
    ExpiresOn = DateTime.UtcNow.AddDays(2),
    PolicyMode = BlobImmutabilityPolicyMode.Unlocked
};


await blob.UploadAsync(localFilePath, options);
Console.WriteLine("Done");
